class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int>v;
        int n=nums.size();
        unordered_map<int,int>mp;
        // priority_queue <int, vector<int>, greater<int> > pq;
         priority_queue < pair<int,int> , vector<pair<int,int>> , greater<pair<int,int>> > minhp;
        for(auto x:nums){
            mp[x]++;
        }
        for(auto i:mp){
            minhp.push({i.second,i.first});
            if(minhp.size()>k){
                minhp.pop();
            }
        }
        while(minhp.size()>0){
            v.push_back(minhp.top().second);
            minhp.pop();
        }
        return v;
    }
};
